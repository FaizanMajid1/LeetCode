/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

struct node
{
    TreeNode* ptr;
    int val;
};

class Solution {
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
        if (!root)
            return false;
        stack<node> S;
        node n,temp;
        n.ptr = root;
        n.val = root->val;

        S.push(n);

        while (!S.empty())
        {
            n.ptr = S.top().ptr;
            n.val = S.top().val;
            S.pop();
            if (n.ptr->right || n.ptr->left)
            {
                if (n.ptr->right)
                {
                    temp.ptr = n.ptr->right;
                    temp.val = n.val + n.ptr->right->val;
                    S.push(temp);
                }
                if (n.ptr->left)
                {
                    temp.ptr = n.ptr->left;
                    temp.val = n.val + n.ptr->left->val;
                    S.push(temp);
                }
            }
            else if (n.val == targetSum)
                return true;
        }
        return false;
    }
};
