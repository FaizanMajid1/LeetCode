/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
        if (!(head->next))
            return true;
        
        vector<int> stack;
        ListNode* ptr = head; 
        int count=0;
        
        while (ptr)
        {
            count++;
            ptr = ptr->next;
        }
        
        ptr = head;
        
        for (int i=1 ; i <= (count / 2) ; i++ )
        {
            stack.push_back(ptr->val);
            ptr = ptr->next;
        }

        if (count%2)
            ptr = ptr->next;
        
        while(ptr)
        {
            if( ptr->val == stack[stack.size()-1])
            {
                stack.pop_back();
                ptr = ptr->next;
            }
            else
                return false;
        }
        return true;
    }
};













