/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        
        vector <TreeNode*> adrs;
        vector <int> lst;
        bool flag=1;
        
        while (root)
        {
           if (root->left && flag)
           {
               adrs.push_back(root);
               root = root->left;
           }
           else
           {
               lst.push_back(root->val);
               
               if (root->right)
               {
                   root = root->right;
                   flag = 1; //see left.
               }
               else
               {
                   if(adrs.empty())
                       break;
                   root = adrs[adrs.size()-1];
                   adrs.pop_back();
                   flag = 0; //don't see left. 
               }     
           }   
        }
        
        return lst;
    }
};
