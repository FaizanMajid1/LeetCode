/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void inorder(TreeNode* root, queue<int> &Q, int &min);
class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        queue<int> Q;
        int min = 99999;
        inorder(root,Q,min);
        return min;
    }
};
void inorder(TreeNode* root, queue<int> &Q, int &min)
{
    if (root->left)
        inorder(root->left, Q, min);
    Q.push(root->val);
    if (Q.size() == 2)
    {
        if (root->val - Q.front() < min)
            min = root->val - Q.front();
        Q.pop();
    }
    if (root->right)
        inorder(root->right, Q, min);
}
